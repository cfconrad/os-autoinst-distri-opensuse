#!/bin/bash  -x
FROM=https://openqa.suse.de
TO_HOST=cfconrad-vm.qa.suse.de
CASEDIR=${CASEDIR:-https://github.com/cfconrad/os-autoinst-distri-opensuse#DEBUG_console_snapshot_handling_local}
SKIP_DOWNLOAD=${SKIP_DOWNLOAD:---skip-download}
PREFIX="openqa_run_"


function trigger_openqa {
    FROM_HOST="$1"
    FROM_JOB="$2"
    SCHEDULE="$3"
    CALLEE=${FUNCNAME[1]}

    openqa-clone-job $SKIP_DOWNLOAD --skip-chained-deps --from $FROM_HOST --host $TO_HOST $FROM_JOB \
        "CASEDIR=$CASEDIR" \
        SCHEDULE="$SCHEDULE" \
        TEST=${CALLEE:${#PREFIX}} \
        | openqa-wait-job
}


function openqa_run_load_snapshot_after_reboot_01 {
    # Use __ONLY__ virtio-terminal, so `autotest::last_milestone_console` is `root-virtio-terminal`
    # This scenario is working with current openQA

    SCHEDULE=''
    SCHEDULE='tests/installation/bootloader_start'
    SCHEDULE="$SCHEDULE,tests/boot/boot_to_desktop"
    SCHEDULE="$SCHEDULE,tests/openqa/console/check_serial_terminal.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/milestone.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/reboot.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/always_rollback.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/check_serial_terminal.pm"

    trigger_openqa "http://cfconrad-vm.qa.suse.de" 8134 "$SCHEDULE"
}

function openqa_run_load_snapshot_after_reboot_02 {
    # Use root-console before milestone so `autotest::last_milestone_console` is `root-console`
    # This scenario is __not__ working with current openQA

    SCHEDULE=''
    SCHEDULE='tests/installation/bootloader_start'
    SCHEDULE="$SCHEDULE,tests/boot/boot_to_desktop"
    SCHEDULE="$SCHEDULE,tests/openqa/console/check_serial_terminal.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/log_root.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/milestone.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/reboot.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/always_rollback.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/check_serial_terminal.pm"

    trigger_openqa "http://cfconrad-vm.qa.suse.de" 8134 "$SCHEDULE"
}

function openqa_run_load_snapshot_after_reboot_03 {
    # Use virtio-console before milestone so `autotest::last_milestone_console` is `virtio-console`
    # This scenario is __not__ working with current openQA

    SCHEDULE=''
    SCHEDULE='tests/installation/bootloader_start'
    SCHEDULE="$SCHEDULE,tests/boot/boot_to_desktop"
    SCHEDULE="$SCHEDULE,tests/openqa/console/log_root.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/check_serial_terminal.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/milestone.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/reboot.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/always_rollback.pm"
    SCHEDULE="$SCHEDULE,tests/openqa/console/log_root.pm"

    trigger_openqa "http://cfconrad-vm.qa.suse.de" 8134 "$SCHEDULE"
}



if [ -z "$1" ]
then
    set +x
    bold=$(tput bold)
    normal=$(tput sgr0)
    echo ""
    echo "ERROR: Missing parameter"
    echo "usage:"
    echo "   $0 <scenario>"
    echo ""
    echo "Available wifi configurations:"
    for i in $(typeset -f | grep -P -o "^${PREFIX}\w+" | sort | while read -r XX; do echo "    ${XX:${#PREFIX}}"; done); do
        echo   $bold $i $normal
        cat  $0 | sed -En '/'$i'/,${p;/^\}/q}' | grep -E '\s*#';
    done
    echo ""
    echo "Availabe variables"
    echo "   TO_HOST=$TO_HOST"
    echo "   SKIP_DOWNLOAD=$SKIP_DOWNLOAD"
    echo "   CASEDIR=$CASEDIR"
    echo ""
else
    "$PREFIX$1"
fi

